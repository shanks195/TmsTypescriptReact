import { PayloadAction } from "@reduxjs/toolkit";
import { IListCode } from "./api";
import { IAppState } from "./app";
import { IAccountState } from "./models/Account";
import { IDashboardState } from "./models/Dashboard";
import { IFolderTreeState } from "./models/FolderTree";
import { IVersionState } from "./models/Version";
import { IStatusTreeState } from "./models/StatusTree";
import { IInforBasicState } from "./models/InforBasic";
import { IInputTypeState } from "./models/InputTypes";
import { ILocationState } from "./models/Location";
import { IMetadataState } from "./models/create-metadata";
import { IMetadataGroupsState, IMetadataListState } from "./models/MetadataList";
import { IStatusTypeState } from "./models/statusType";
import { ITemplateGroupsState } from "./models/templateGroups";
import { ITemplateDetailsState, ITemplateOperateListState } from "./models/Templates";
import { IBlockState } from "./models/block";
import { IDepartmentState } from "./models/Department";
import { ITemplateTypeState } from "./models/templateType";
import { ICreateTemplateGroupState } from "./models/TemplateGroup";
import {ITemplatedataState} from "./models/Templatedata"
import { IFolderListMenuState } from "./models/TemplateGroupFolderMenu";
import { IListTemplateState } from "./models/ListTemplate";
import { IMethodsState } from './models/MethodType';
import { IAuthTypeState } from "./models/AuthType";
import { ICreateTemplateFolderState, IFolderListState } from "./models/TemplateGroupFolder";
import { ITemplateUserViewState } from "./models/TemplateUserView";
import { ITemplateCreateState } from "./models/create-template";
import { IUploadState } from "./models/Upload";
import { IDataSourceListState } from './models/DataSourceList';
import { IDataSourceTemplateState } from './models/DataSourceTemplate';
import { IDataSourceDetailState } from "./models/DataSourceDetail";
import { IFolderTemplateListState } from "./models/FolderTemplateList";
import { ITemplateFieldsState } from "./models/TemplateFields";
import { IDataSourceDetailAssignState } from './models/DataSourceDetail';

export interface RootState {
  app: IAppState;
  auth: IAccountState;
  authType: IAuthTypeState;
  dashboard: IDashboardState;
  location: ILocationState;
  inforBasic: IInforBasicState;
  inputTypes: IInputTypeState;
  FolderTemplateList: IFolderTemplateListState;
  // template: ITemplatesState;
  templateOperate: ITemplateOperateListState;
  templateGroups: ITemplateGroupsState;
  templateDetails: ITemplateDetailsState;
  createTemplateGroup: ICreateTemplateGroupState;
  createMetadata:IMetadataState;
  updateMetadata:IMetadataState;
  folderTree: IFolderTreeState;
  version: IVersionState;
  block: IBlockState;
  templateType: ITemplateTypeState;
  department: IDepartmentState;
  dataSourceList: IDataSourceListState;
  dataSourceTeamplate: IDataSourceTemplateState;
  dataSourceDetail: IDataSourceDetailState;
  dataSourceDetailAssign: IDataSourceDetailAssignState,
  statusTree: IStatusTreeState;
  statusType : IStatusTypeState;
  methodType: IMethodsState;
  metadataGroups: IMetadataGroupsState;
  metadataList: IMetadataListState;
  templatedata: ITemplatedataState;
  updateTemplateGroup: ICreateTemplateGroupState;
  templateGroupFolderList: IFolderListState;
  templateGroupFolderListMenu: IFolderListMenuState;
  listTemplate: IListTemplateState;
  createTemplateGroupFolder: ICreateTemplateFolderState;
  templateUserView: ITemplateUserViewState;
  TemplateFields: ITemplateFieldsState;
  createTemplate:ITemplateCreateState;
  upload:IUploadState;
}

export type PAListCode<T> = PayloadAction<IListCode<T>>;